{
    "contents" : "# The data represent data collected from the accelerometers from the \n# Samsung Galaxy S smartphone. A full description is available at \n# the site where the data was obtained: \n# http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones \n\n# create temp file and download source data zip to temp file\ntemp <- tempfile()\nurl <- \"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\"\ndownload.file(url,temp)\n\n# extract activity labels, training data, test data, features, subject files (test and train) \n# and activity files (test and train) to the environment\nactivity_labels <- read.table(unz(temp, \"UCI HAR Dataset/activity_labels.txt\"))\ntrain_data <- read.table(unz(temp, \"UCI HAR Dataset/train/X_train.txt\"))\ntest_data <- read.table(unz(temp, \"UCI HAR Dataset/test/X_test.txt\"))\nfeatures <- read.table(unz(temp, \"UCI HAR Dataset/features.txt\"))\ntest_subjects <- read.table(unz(temp, \"UCI HAR Dataset/test/subject_test.txt\"))\ntrain_subjects <- read.table(unz(temp, \"UCI HAR Dataset/train/subject_train.txt\"))\ntest_activities <- read.table(unz(temp, \"UCI HAR Dataset/test/y_test.txt\"))\ntrain_activities <- read.table(unz(temp, \"UCI HAR Dataset/train/y_train.txt\"))\n\n# release tempfile at the first opportunity\nunlink(temp) \n\n# 1. Merge the training and test data sets to create one dataset\n# bind subject, activity and data columns for train and test datasets and combine rows as all_data\ntrain_data <- cbind(train_subjects, train_activities, train_data)\ntest_data <- cbind(test_subjects, test_activities, test_data)\nall_data <- rbind(train_data,test_data)\n\n# 2. Extract only the measurements on the mean and standaard deviation for each measurement\n# determine columns we want (mean and standard deviation)\ncols <- union(c(features[grepl(\"-mean()\",features$V2,fixed=TRUE),1]), \n              c(features[grepl(\"-std()\",features$V2,fixed=TRUE),1]))\n# cols are offset by two because of the subject and activity columns added to all data\ncols.offset <- c(1,2,sapply(cols, function(x) x+2))\n# subset only the columns we want\nmean_std_data <- all_data[,cols.offset]\n\n# 3. Use descriptive activity names to name the activities in the dataset\n# these names have been pulled from the activity labels file\nmean_std_data[,2] <- as.character(activity_labels[mean_std_data[,2],2])\n\n# 4. Appropriately label the dataset with descriptive variable names\ncol.names.to.change <- as.character(features[cols,2])\ncol.names.to.change <- sub(\"^t\", \"time.domain.\", col.names.to.change)\ncol.names.to.change <- sub(\"^f\", \"frequency.domain.\", col.names.to.change)\ncol.names.to.change <- sub(\"BodyBody\", \"Body\", col.names.to.change, fixed=TRUE) # fixing error\ncol.names.to.change <- sub(\"Body\", \"body.\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"Gravity\", \"gravity.\", col.names.to.change, fixed=TRUE)\n\ncol.names.to.change <- sub(\"AccJerkMag\", \"accelerometer.jerk.magnitude.\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"AccMag\", \"accelerometer.magnitude.\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"AccJerk\", \"accelerometer.jerk.signal.\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"Acc\", \"accelerometer.signal.\", col.names.to.change, fixed=TRUE)\n\ncol.names.to.change <- sub(\"GyroJerkMag\", \"gyroscope.jerk.magnitude.\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"GyroMag\", \"gyroscope.magnitude.\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"GyroJerk\", \"gyroscope.jerk.signal.\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"Gyro\", \"gyroscope.signal.\", col.names.to.change, fixed=TRUE)\n\ncol.names.to.change <- sub(\"-mean()\", \"mean\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"-std()\", \"std\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"-X\", \".x\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"-Y\", \".y\", col.names.to.change, fixed=TRUE)\ncol.names.to.change <- sub(\"-Z\", \".z\", col.names.to.change, fixed=TRUE)\n\nnames(mean_std_data) <- c(\"subject\", \"activity\", col.names.to.change)\n\n# 5. Creates a second, independent tidy data set with the \n# average of each variable for each activity and each subject\nmeans <- aggregate(mean_std_data[3:length(mean_std_data)],\n                   by=mean_std_data[c(\"subject\", \"activity\")],FUN=mean)\n# rename column headings as averages\nnames(means)[3:length(means)] <- paste(\"average\", names(means)[3:length(means)], sep=\".\")\n\nwrite.csv(means, \"means.csv\")\nwrite.table(means, \"means.txt\", sep=\"\\t\", row.names=F)",
    "created" : 1402642723301.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2880716930",
    "id" : "CFC50BD2",
    "lastKnownWriteTime" : 1402646828,
    "path" : "C:/coursera/GettingAndCleaningDataCourseProject/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}